name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: pytest

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/hello-gitops:${{ github.sha }}

  deploy-to-eks:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --region us-east-1 --name hello-gitops-new

    - name: Test kubectl connection
      run: kubectl get nodes

    - name: Determine active version
      id: active-version
      run: |
        active_version=$(kubectl get svc hello-gitops -n hello-gitops-new -o jsonpath='{.spec.selector.version}')
        if [[ -z "$active_version" ]]; then
          echo "No active version detected. Defaulting to blue."
          active_version="blue"
        fi
        echo "active_version=${active_version}" >> $GITHUB_ENV
        echo "Current active version: ${active_version}"

    - name: Deploy next version
      run: |
        if [[ "$active_version" == "blue" ]]; then
          echo "Deploying Green version"
          kubectl apply -f deployment-green.yaml -n hello-gitops-new
        else
          echo "Deploying Blue version"
          kubectl apply -f deployment-blue.yaml -n hello-gitops-new
        fi

    - name: Wait for rollout
      run: |
        if [[ "$active_version" == "blue" ]]; then
          echo "Waiting for Green deployment rollout"
          kubectl rollout status deployment/hello-gitops-green -n hello-gitops-new --timeout=300s
        else
          echo "Waiting for Blue deployment rollout"
          kubectl rollout status deployment/hello-gitops-blue -n hello-gitops-new --timeout=300s
        fi

    - name: Switch traffic
      run: |
        if [[ "$active_version" == "blue" ]]; then
          echo "Switching traffic to Green"
          kubectl patch service hello-gitops -n hello-gitops-new -p '{"spec":{"selector":{"app":"hello-gitops","version":"green"}}}'
        else
          echo "Switching traffic to Blue"
          kubectl patch service hello-gitops -n hello-gitops-new -p '{"spec":{"selector":{"app":"hello-gitops","version":"blue"}}}'
        fi

    - name: Validate traffic switch
      run: |
        service=$(kubectl get svc hello-gitops -n hello-gitops-new -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
        echo "Testing application at $service"
        for i in {1..10}; do
          curl -s "http://$service" && echo "Success!" && exit 0 || echo "Retrying..."
          sleep 5
        done
        echo "Error: Application did not respond as expected."
        exit 1

    - name: Cleanup old deployment
      run: |
        if [[ "$active_version" == "blue" ]]; then
          echo "Deleting Blue deployment"
          kubectl delete deployment hello-gitops-blue -n hello-gitops-new
        else
          echo "Deleting Green deployment"
          kubectl delete deployment hello-gitops-green -n hello-gitops-new
        fi
